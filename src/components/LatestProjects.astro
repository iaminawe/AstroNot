---
import { Image, getImage } from "astro:assets";
import { postImageImport } from "../helpers/images.mjs";

// Get all projects and handle missing publish_date
const allProjects = await Astro.glob("../pages/projects/*.mdx");

// Filter and sort projects safely
const latestProjects = allProjects
  .filter(project => project.frontmatter && typeof project.frontmatter === 'object')
  .sort((a, b) => {
    // Use a default date if publish_date is missing
    const dateA = a.frontmatter.publish_date ? new Date(a.frontmatter.publish_date).getTime() : 0;
    const dateB = b.frontmatter.publish_date ? new Date(b.frontmatter.publish_date).getTime() : 0;
    return dateB - dateA;
  })
  .slice(0, 4);

const { fullWidth = true, animated = false } = Astro.props;
---

<aside
  aria-label="Project Case Studies"
  class={`mt-12 bg-gray-50 py-8 dark:bg-gray-800 dark:bg-opacity-80 lg:mt-0  ${
    !fullWidth ? "mx-auto max-w-screen-xl rounded-lg lg:py-12" : "lg:py-24"
  }`}
>
  <div class="mx-auto max-w-screen-xl px-4">
    <h2
      class="-mt-4 mb-8 pl-2 text-3xl font-bold text-gray-900 dark:text-white"
    >
      Project Case Studies
    </h2>
    <div class="grid gap-12 sm:grid-cols-2 lg:grid-cols-4">
      {
        latestProjects.map((project) => {
          // Safely extract frontmatter properties with defaults
          const frontmatter = project.frontmatter || {};
          const title = frontmatter.title || "Untitled Project";
          const cover = frontmatter.cover;
          const slug = frontmatter.slug || "";
          const id = frontmatter.id;
          
          let coverImageSrc = "";
          let preloadCoverImageSrc = "";
          let preloadCoverImageMobileSrc = "";

          if (cover) {
            try {
              // For external images from Notion
              coverImageSrc = cover;
              preloadCoverImageSrc = cover;
              preloadCoverImageMobileSrc = cover;
            } catch (error) {
              console.error(`Error processing image for ${title}:`, error);
            }
          }

          return (
            <article class="max-w-xs">
              {cover && (
                <>
                  <a href={`/projects/${slug}`}>
                    <img
                      src={coverImageSrc}
                      class="mb-5 max-h-[127px] rounded-lg object-cover"
                      alt={`${title} image`}
                      width={452}
                      style={
                        animated && id
                          ? `view-transition-name: cover-image-${id}; contain: layout;`
                          : ""
                      }
                    />
                  </a>

                  {preloadCoverImageSrc && (
                    <link rel="prefetch" href={preloadCoverImageSrc} as="image" />
                  )}
                  {preloadCoverImageMobileSrc && (
                    <link
                      rel="prefetch"
                      href={preloadCoverImageMobileSrc}
                      as="image"
                    />
                  )}
                </>
              )}
              <div
                style={
                  animated && id
                    ? `view-transition-name: cover-title-${id}; contain: layout;`
                    : ""
                }
              >
                <h2 class="mb-2 text-xl font-bold leading-tight text-gray-900 dark:text-white ">
                  <a href={`/projects/${slug}`}>{title}</a>
                </h2>
                <p class="mb-4 text-gray-500 dark:text-gray-400">
                  {frontmatter.description && frontmatter.description !== "undefined" ? frontmatter.description : ""}
                </p>
                <a
                  href={`/projects/${slug}`}
                  class="inline-flex items-center font-medium text-primary-600 underline underline-offset-4 hover:no-underline dark:text-secondary-500"
                >
                  View Project
                </a>
              </div>
            </article>
          );
        })
      }
    </div>
  </div>
</aside>
