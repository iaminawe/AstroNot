---
import Layout from "../layouts/Layout.astro";
import { fetchServices } from "../helpers/notion.js";

const title = "Test Notion API Connection";
const servicesDbId = import.meta.env.VITE_SERVICES_DB_ID;
const notionKey = import.meta.env.VITE_NOTION_KEY ? "Present (length: " + import.meta.env.VITE_NOTION_KEY.length + ")" : "Missing";

let testResults = null;
let error = null;

try {
  console.log("Attempting to fetch services from Notion...");
  const services = await fetchServices();
  console.log("Fetch services result:", services);
  
  testResults = {
    success: true,
    count: services.length,
    services: services
  };
} catch (e) {
  console.error("Error fetching services:", e);
  error = {
    message: e.message,
    stack: e.stack
  };
}
---

<Layout title={title}>
  <main class="max-w-4xl mx-auto p-4">
    <h1 class="text-3xl font-bold mb-6">{title}</h1>
    
    <div class="mb-6 p-4 bg-gray-100 rounded-lg dark:bg-gray-800">
      <h2 class="text-xl font-bold mb-4">Environment Variables</h2>
      <p><strong>VITE_SERVICES_DB_ID:</strong> {servicesDbId}</p>
      <p><strong>VITE_NOTION_KEY:</strong> {notionKey}</p>
    </div>
    
    <div class="mb-6 p-4 bg-gray-100 rounded-lg dark:bg-gray-800">
      <h2 class="text-xl font-bold mb-4">Test Results</h2>
      
      {error && (
        <div class="mb-4 p-4 bg-red-100 text-red-800 rounded-lg dark:bg-red-900 dark:text-red-200">
          <h3 class="font-bold">Error</h3>
          <p>{error.message}</p>
          <pre class="mt-2 text-xs overflow-auto">{error.stack}</pre>
        </div>
      )}
      
      {testResults && (
        <div class="mb-4 p-4 bg-green-100 text-green-800 rounded-lg dark:bg-green-900 dark:text-green-200">
          <h3 class="font-bold">Success</h3>
          <p>Found {testResults.count} services</p>
          
          {testResults.services.map((serviceCategory) => (
            <div class="mt-4 p-2 bg-white rounded dark:bg-gray-700">
              <h4 class="font-bold">{serviceCategory.name}</h4>
              <p>Items: {serviceCategory.items.length}</p>
              <ul class="ml-4 list-disc">
                {serviceCategory.items.map((item) => (
                  <li>{item.title}</li>
                ))}
              </ul>
            </div>
          ))}
        </div>
      )}
      
      {!testResults && !error && (
        <p>No test results available. Check the console for errors.</p>
      )}
    </div>
    
    <a href="/" class="inline-block px-4 py-2 bg-primary-600 text-white rounded hover:bg-primary-700">
      Return to homepage
    </a>
  </main>
</Layout>
