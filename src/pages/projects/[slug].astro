---
import ProjectLayout from "../../layouts/ProjectLayout.astro";
import { fetchProjects } from "../../helpers/notion.js";

export async function getStaticPaths() {
  const projects = await fetchProjects();
  
  return projects.map(project => {
    // Create a frontmatter-like object for the ProjectLayout
    const frontmatter = {
      id: project.id,
      title: project.title,
      description: project.description,
      cover: project.coverImage,
      tags: project.tags,
      url: project.url,
      created_time: project.created_time,
      last_edited_time: project.last_edited_time,
      publish_date: project.created_time,
    };
    
    return {
      params: { slug: project.slug },
      props: { 
        frontmatter,
        content: project.content || '',
        headings: [] // No headings for now
      }
    };
  });
}

const { frontmatter, content } = Astro.props;

// Process the Markdown content to convert it to HTML
// This is a simple approach that handles basic Markdown formatting
const processMarkdown = (markdown) => {
  // Handle bold text
  let html = markdown.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
  
  // Handle italic text
  html = html.replace(/\*(.*?)\*/g, '<em>$1</em>');
  
  // Handle headers
  html = html.replace(/^# (.*?)$/gm, '<h1>$1</h1>');
  html = html.replace(/^## (.*?)$/gm, '<h2>$1</h2>');
  html = html.replace(/^### (.*?)$/gm, '<h3>$1</h3>');
  
  // Handle paragraphs - split by double newlines and wrap in p tags
  html = html.split(/\n\n+/).map(p => `<p>${p}</p>`).join('');
  
  return html;
};

const htmlContent = processMarkdown(content);
---

<ProjectLayout frontmatter={frontmatter}>
  <div class="prose dark:prose-invert max-w-none">
    <div set:html={htmlContent} />
    
    {frontmatter.url && (
      <div class="mt-8">
        <a 
          href={frontmatter.url} 
          target="_blank" 
          rel="noopener noreferrer"
          class="inline-flex items-center px-5 py-2.5 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
        >
          View Project
          <svg class="w-3.5 h-3.5 ml-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
          </svg>
        </a>
      </div>
    )}
  </div>
</ProjectLayout>
