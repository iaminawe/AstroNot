---
import { getImage } from "astro:assets";
import type { ImageMetadata } from "astro";
import Layout from "../layouts/Layout.astro";
import { postImageImport } from "../helpers/images.mjs";
import Tags from "../components/Tags.astro";
import { author as authorData } from "../data/index.js";

interface Frontmatter {
  title: string;
  cover?: string;
  slug: string;
  description?: string;
  tags?: Array<{ name: string; color: string }>;
}

interface Project {
  frontmatter: Frontmatter;
}

const PROJECTS_PATH = "projects";
const COVER_IMG_ASPECT_RATIO = "13/9"; // TODO: Expose as variable

// Get all projects from static markdown files
const projectFiles = await import.meta.glob<Project>("./projects/*.mdx", { eager: true });
const projects = Object.values(projectFiles);
---

<Layout title="Projects">
  <main class="">
    <section class="">
      <div class="mx-auto max-w-screen-2xl px-4 py-8 lg:px-6 lg:py-16">
        <div class="mx-auto mb-4 max-w-screen-sm text-center lg:mb-8">
          <h1
            class="mb-4 text-4xl font-extrabold tracking-tight text-gray-900 dark:text-white lg:text-5xl"
          >
            Projects
          </h1>
          <h2
            class="font-light text-gray-500 dark:text-gray-400 max-[375px]:text-xs sm:text-xl lg:text-2xl"
          >
            Websites, AI Agents, Design & Animation
          </h2>
          <p class="mt-4 text-base text-gray-500 dark:text-gray-400 sm:text-lg">
            Explore my latest projects and see what I've been working on. From web applications to AI agents, I'm always building something new.
          </p>
        </div>

        <div
          class="mt-8 grid items-center gap-8 md:grid-cols-2 lg:mt-16 xl:grid-cols-3"
        >
          {/* Static Projects */}
          {projects.map(async (project) => {
            const { frontmatter } = project;
            let coverImageSrc = "";
            let preloadCoverImageSrc = "";
            let preloadCoverImageMobileSrc = "";

            if (frontmatter.cover) {
              try {
                const imageFilePath = (await postImageImport(frontmatter.cover)).default;
                
                // If it's a remote image (S3 or external), use the URL directly
                if (imageFilePath.isS3 || imageFilePath.isRemote) {
                  coverImageSrc = imageFilePath.src;
                  preloadCoverImageSrc = imageFilePath.src;
                  preloadCoverImageMobileSrc = imageFilePath.src;
                } else {
                  // For local images, use getImage
                  coverImageSrc = (
                    await getImage({
                      src: imageFilePath as ImageMetadata,
                      width: 1400,
                    })
                  ).src;

                  preloadCoverImageSrc = (
                    await getImage({
                      src: imageFilePath as ImageMetadata,
                      width: 1920,
                      height: 1080,
                    })
                  ).src;

                  preloadCoverImageMobileSrc = (
                    await getImage({
                      src: imageFilePath as ImageMetadata,
                      width: 720,
                      height: 480,
                    })
                  ).src;
                }
              } catch (error) {
                console.error(`Error processing image for ${frontmatter.title}:`, error);
              }
            }

            return (
              <a
                href={`/${PROJECTS_PATH}/${frontmatter.slug}`}
                class="post-link-container contents"
              >
                <article class="h-fit transform rounded-lg border border-gray-200 bg-white shadow-md transition duration-100 ease-in dark:border-gray-700 dark:bg-gray-800 sm:hover:scale-[102%] lg:hover:scale-105">
                  {frontmatter.cover && (
                    <div>
                      <img
                        class={`mb-1 h-auto w-full rounded-md rounded-b-none object-cover`}
                        style={`aspect-ratio: ${COVER_IMG_ASPECT_RATIO}`}
                        src={coverImageSrc}
                        alt={frontmatter.title}
                      />
                      {preloadCoverImageSrc && (
                        <link rel="prefetch" href={preloadCoverImageSrc} as="image" />
                      )}
                      {preloadCoverImageMobileSrc && (
                        <link rel="prefetch" href={preloadCoverImageMobileSrc} as="image" />
                      )}
                    </div>
                  )}
                  <div class="p-4">
                    {frontmatter.tags && frontmatter.tags.length > 0 && (
                      <Tags tags={frontmatter.tags} />
                    )}

                    <h2 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
                      {frontmatter.title}
                    </h2>

                    <p class="mb-4 whitespace-pre-line font-light text-gray-500 dark:text-gray-400">
                      {frontmatter.description}
                    </p>

                    {/* Author Section */}
                    <div class="flex items-center space-x-3">
                      <img
                        class="h-11 w-11 rounded-full"
                        src={authorData.avatar}
                        alt={authorData.name}
                      />
                      <div class="font-medium dark:text-white">
                        <div>{authorData.name}</div>
                        <div class="text-sm font-normal text-gray-500 dark:text-gray-400">
                          <span>Project</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </article>
              </a>
            );
          })}
        </div>
      </div>
    </section>
  </main>
</Layout>
